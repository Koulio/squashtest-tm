<?xml version="1.0" encoding="UTF-8"?>
<!--

        This file is part of the Squashtest platform.
        Copyright (C) 2010 - 2012 Henix, henix.fr

        See the NOTICE file distributed with this work for additional
        information regarding copyright ownership.

        This is free software: you can redistribute it and/or modify
        it under the terms of the GNU Lesser General Public License as published by
        the Free Software Foundation, either version 3 of the License, or
        (at your option) any later version.

        this software is distributed in the hope that it will be useful,
        but WITHOUT ANY WARRANTY; without even the implied warranty of
        MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
        GNU Lesser General Public License for more details.

        You should have received a copy of the GNU Lesser General Public License
        along with this software.  If not, see <http://www.gnu.org/licenses/>.

-->
<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog 
     http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-2.0.xsd">

	
	<include file="../../../main/liquibase/tm/tm.changelog-1.3.0.xml" relativeToChangelogFile="true" />     

	<changeSet id="1.3.0.check-tcln-closure-table" author="bsiri">
		<preConditions>
			
			<!--  first : count the number of generated lines -->
			
			<sqlCheck expectedResult="9">
				select count(*) from TCLN_RELATIONSHIP_CLOSURE
				where ancestor_id = 130
	 		</sqlCheck>
	 		
	 		<sqlCheck expectedResult="2">
	 			select count(*) from TCLN_RELATIONSHIP_CLOSURE
	 			where ancestor_id = 131
	 		</sqlCheck>
	 		
	 		<sqlCheck expectedResult="1">
	 			select count(*) from TCLN_RELATIONSHIP_CLOSURE
	 			where ancestor_id = 132
	 		</sqlCheck>	 
	 		
			<sqlCheck expectedResult="6">
				select count(*) from TCLN_RELATIONSHIP_CLOSURE
				where ancestor_id = 133
	 		</sqlCheck>
	 		
	 		<sqlCheck expectedResult="1">
	 			select count(*) from TCLN_RELATIONSHIP_CLOSURE
	 			where ancestor_id = 134
	 		</sqlCheck>
	 		
	 		<sqlCheck expectedResult="1">
	 			select count(*) from TCLN_RELATIONSHIP_CLOSURE
	 			where ancestor_id = 135
	 		</sqlCheck>	 	
	 		
			<sqlCheck expectedResult="1">
				select count(*) from TCLN_RELATIONSHIP_CLOSURE
				where ancestor_id = 136
	 		</sqlCheck>
	 		
	 		<sqlCheck expectedResult="1">
	 			select count(*) from TCLN_RELATIONSHIP_CLOSURE
	 			where ancestor_id = 137
	 		</sqlCheck>
	 			 		 				
	 		<sqlCheck expectedResult="1">
	 			select count(*) from TCLN_RELATIONSHIP_CLOSURE
	 			where ancestor_id = 138
	 		</sqlCheck>
	 		
	 		<!--  second : check the depths -->
	 			 
	 		<sqlCheck expectedResult="9">
	 			select count(*) from TCLN_RELATIONSHIP_CLOSURE
	 			where depth = 0 
	 			and ancestor_id in (130, 131, 132, 133, 134, 135, 136, 137, 138)
	 		</sqlCheck>
	 		
	 		<sqlCheck expectedResult="8">
	 			select count(*) from TCLN_RELATIONSHIP_CLOSURE
	 			where depth = 1 
	 			and ancestor_id in (130, 131, 132, 133, 134, 135, 136, 137, 138)
	 		</sqlCheck>	 	
	 		
	 		<sqlCheck expectedResult="6">
	 			select count(*) from TCLN_RELATIONSHIP_CLOSURE
	 			where depth = 2 
	 			and ancestor_id in (130, 131, 132, 133, 134, 135, 136, 137, 138)
	 		</sqlCheck>	 			 			
	 			 		 		 		
		</preConditions>
		<comment>
			130 contains 131 and 133; 
			131 contains 132;
			133 contains 134, 135, 136, 317, 138.
			This test ensures that the hierarchy was fully expanded in the closure table.
		</comment>
	</changeSet>
		
</databaseChangeLog>