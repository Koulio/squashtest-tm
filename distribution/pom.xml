<?xml version="1.0"?>
<project
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
  xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
>
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <artifactId>squashtest-parent-pom</artifactId>
    <groupId>org.squashtest.tm</groupId>
    <version>1.2.0.IT36-SNAPSHOT</version>
    <relativePath>../parent-pom</relativePath>
  </parent>
  <artifactId>squashtest-csp-distribution</artifactId>
  <name>squashtest-tm-distribution</name>
  <description>Squashtest CSP - Distribution assembly module
	</description>
  <packaging>pom</packaging>

  <properties>
    <shared-resources>${project.build.directory}/maven-shared-archive-resources</shared-resources>
    <master.changelog>${shared-resources}/global.changelog-master.xml</master.changelog>
    <upgrade.0.15.0.changelog>${shared-resources}/upgrade/upgrade.changelog-up-to-0.15.0.xml</upgrade.0.15.0.changelog>
    <upgrade.0.17.0.changelog>${shared-resources}/upgrade/upgrade.changelog-up-to-0.17.0.xml</upgrade.0.17.0.changelog>
    <upgrade.0.20.0.changelog>${shared-resources}/upgrade/upgrade.changelog-up-to-0.20.0.xml</upgrade.0.20.0.changelog>
    <upgrade.0.23.0.changelog>${shared-resources}/upgrade/upgrade.changelog-up-to-0.23.0.xml</upgrade.0.23.0.changelog>
    <upgrade.1.1.0.changelog>${shared-resources}/upgrade/upgrade.changelog-up-to-1.1.0.xml</upgrade.1.1.0.changelog>
    <upgrade.1.1.1.changelog>${shared-resources}/upgrade/upgrade.changelog-up-to-1.1.1.xml</upgrade.1.1.1.changelog>
    <upgrade.1.2.0.changelog>${shared-resources}/upgrade/upgrade.changelog-up-to-1.2.0.xml</upgrade.1.2.0.changelog>

    <distributed-db.changelog>${project.build.outputDirectory}/distributed-db.changelog.xml</distributed-db.changelog>
    <felix.artifactId>org.apache.felix.main</felix.artifactId>
    <felix.version>3.2.1</felix.version>
    <felix.gogo.version>0.6.1</felix.gogo.version>
    <database.script.directory>${project.build.directory}/database-scripts/</database.script.directory>
    <h2.incremental.url>jdbc:h2:target/incremental-upgrade-database/squash-tm</h2.incremental.url>
    <h2.full.url>jdbc:h2:target/full-install-database/squash-tm</h2.full.url>
    <distro.directory.name>squash-tm</distro.directory.name>
    <distro.archive.name>${distro.directory.name}-${project.version}</distro.archive.name>
    <config.database.driverClassName>org.h2.Driver</config.database.driverClassName>
    <config.database.url>jdbc:h2:../data/squash-tm</config.database.url>
    <config.database.username>sa</config.database.username>
    <config.database.password>sa</config.database.password>
    <izpack-compiler.version>4.3.4</izpack-compiler.version>
    <izpack-plugin.version>1.0-alpha-5</izpack-plugin.version>
    <izpack.resources.outputDirectory>${project.build.directory}/izpack-resources</izpack.resources.outputDirectory>
    <izpack.licence.path>${project.build.directory}/maven-shared-archive-resources/META-INF/COPYING.txt</izpack.licence.path>
    <izpack.distro.directory>${project.build.directory}/${distro.archive.name}/${distro.directory.name}</izpack.distro.directory>
    <squash.launcher.name>squash-launcher.jar</squash.launcher.name>
    <squashTmVersion>${project.version}</squashTmVersion>
  </properties>

  <build>
    <resources>
      <resource>
        <directory>${project.basedir}/src/main/liquibase</directory>
        <filtering>true</filtering>
      </resource>
    </resources>

    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-remote-resources-plugin</artifactId>
        <executions>
          <execution>
            <phase>generate-resources</phase>
            <goals>
              <goal>process</goal>
            </goals>
            <configuration>
              <resourceBundles>
                <resourceBundle>org.squashtest.tm:squashtest-tm-database:${squashTmVersion}</resourceBundle>
                <resourceBundle>org.squashtest.tm:squashtest-license-resources:${squashTmVersion}</resourceBundle>
              </resourceBundles>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-assembly-plugin</artifactId>
        <executions>
          <execution>
            <id>assemble-standalone-distro</id>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
            <configuration>
              <descriptors>
                <descriptor>src/main/assembly/binary-distro.xml</descriptor>
              </descriptors>
              <appendAssemblyId>false</appendAssemblyId>
              <finalName>${distro.archive.name}</finalName>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.codehaus.izpack</groupId>
        <artifactId>izpack-maven-plugin</artifactId>
        <version>${izpack-plugin.version}</version>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>izpack</goal>
            </goals>
            <configuration>
              <descriptor>${izpack.resources.outputDirectory}/install.xml</descriptor>
              <fileExtension>exe</fileExtension>
              <kind>installer</kind>
              <installerFile>${project.build.directory}/${distro.directory.name}-${project.version}-installer</installerFile>
            </configuration>
          </execution>
        </executions>
        <dependencies>
          <dependency>
            <groupId>org.codehaus.izpack</groupId>
            <artifactId>izpack-standalone-compiler</artifactId>
            <version>${izpack-compiler.version}</version>
          </dependency>
        </dependencies>
      </plugin>

      <plugin>
				<!-- resources are not processed for pom projects -->
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <executions>
          <execution>
            <id>resources</id>
            <goals>
              <goal>resources</goal>
            </goals>
          </execution>
          <execution>
            <id>izpack-resources</id>
            <phase>process-resources</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <escapeWindowsPaths>false</escapeWindowsPaths>
              <resources>
                <resource>
                  <directory>${project.basedir}/src/main/izpack</directory>
                  <filtering>true</filtering>
                </resource>
              </resources>
              <outputDirectory>${izpack.resources.outputDirectory}</outputDirectory>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.liquibase</groupId>
        <artifactId>liquibase-maven-plugin</artifactId>
        <configuration>
          <promptOnNonLocalDatabase>false</promptOnNonLocalDatabase>
        </configuration>
        <executions>
          <execution>
            <id>generate-h2-0.15.0-script</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>updateSQL</goal>
            </goals>
            <configuration>
              <dropFirst>true</dropFirst>
              <changeLogFile>${upgrade.0.15.0.changelog}</changeLogFile>
              <driver>org.h2.Driver</driver>
              <url>${h2.incremental.url}</url>
              <username>sa</username>
              <password>sa</password>
              <migrationSqlOutputFile>${database.script.directory}/h2-upgrade-to-0.15.0.sql</migrationSqlOutputFile>
            </configuration>
          </execution>

          <execution>
            <id>generate-h2-0.17.0-script</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>updateSQL</goal>
            </goals>
            <configuration>
              <dropFirst>false</dropFirst>
              <changeLogFile>${upgrade.0.17.0.changelog}</changeLogFile>
              <driver>org.h2.Driver</driver>
              <url>${h2.incremental.url}</url>
              <username>sa</username>
              <password>sa</password>
              <migrationSqlOutputFile>${database.script.directory}/h2-upgrade-to-0.17.0.sql</migrationSqlOutputFile>
            </configuration>
          </execution>

          <execution>
            <id>generate-h2-0.20.0-script</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>updateSQL</goal>
            </goals>
            <configuration>
              <dropFirst>false</dropFirst>
              <changeLogFile>${upgrade.0.20.0.changelog}</changeLogFile>
              <driver>org.h2.Driver</driver>
              <url>${h2.incremental.url}</url>
              <username>sa</username>
              <password>sa</password>
              <migrationSqlOutputFile>${database.script.directory}/h2-upgrade-to-0.20.0.sql</migrationSqlOutputFile>
            </configuration>
          </execution>

          <execution>
            <id>generate-h2-0.23.0-script</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>updateSQL</goal>
            </goals>
            <configuration>
              <dropFirst>false</dropFirst>
              <changeLogFile>${upgrade.0.23.0.changelog}</changeLogFile>
              <driver>org.h2.Driver</driver>
              <url>${h2.incremental.url}</url>
              <username>sa</username>
              <password>sa</password>
              <migrationSqlOutputFile>${database.script.directory}/h2-upgrade-to-0.23.0.sql</migrationSqlOutputFile>
            </configuration>
          </execution>

          <execution>
            <id>generate-h2-1.1.0-script</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>updateSQL</goal>
            </goals>
            <configuration>
              <dropFirst>false</dropFirst>
              <changeLogFile>${upgrade.1.1.0.changelog}</changeLogFile>
              <driver>org.h2.Driver</driver>
              <url>${h2.incremental.url}</url>
              <username>sa</username>
              <password>sa</password>
              <migrationSqlOutputFile>${database.script.directory}/h2-upgrade-to-1.1.0.sql</migrationSqlOutputFile>
            </configuration>
          </execution>

          <execution>
            <id>generate-h2-1.1.1-script</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>updateSQL</goal>
            </goals>
            <configuration>
              <dropFirst>false</dropFirst>
              <changeLogFile>${upgrade.1.1.1.changelog}</changeLogFile>
              <driver>org.h2.Driver</driver>
              <url>${h2.incremental.url}</url>
              <username>sa</username>
              <password>sa</password>
              <migrationSqlOutputFile>${database.script.directory}/h2-upgrade-to-1.1.1.sql</migrationSqlOutputFile>
            </configuration>
          </execution>
          <execution>
            <id>generate-h2-1.2.0-script</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>updateSQL</goal>
            </goals>
            <configuration>
              <dropFirst>false</dropFirst>
              <changeLogFile>${upgrade.1.2.0.changelog}</changeLogFile>
              <driver>org.h2.Driver</driver>
              <url>${h2.incremental.url}</url>
              <username>sa</username>
              <password>sa</password>
              <migrationSqlOutputFile>${database.script.directory}/h2-upgrade-to-${squashTmVersion}.sql</migrationSqlOutputFile>
            </configuration>
          </execution>
          <execution>
            <id>generate-h2-full-install-script</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>updateSQL</goal>
            </goals>
            <configuration>
              <dropFirst>true</dropFirst>
              <changeLogFile>${master.changelog}</changeLogFile>
              <driver>org.h2.Driver</driver>
              <url>${h2.full.url}</url>
              <username>sa</username>
              <password>sa</password>
              <migrationSqlOutputFile>${database.script.directory}/h2-full-install-version-${project.version}.sql</migrationSqlOutputFile>
            </configuration>
          </execution>

          <execution>
            <id>generate-h2-full-install-database</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>update</goal>
            </goals>
            <configuration>
              <dropFirst>true</dropFirst>
              <changeLogFile>${distributed-db.changelog}</changeLogFile>
              <driver>org.h2.Driver</driver>
              <url>jdbc:h2:target/data/squash-tm</url>
              <username>sa</username>
              <password>sa</password>
            </configuration>
          </execution>
        </executions>
      </plugin>

			<!-- We need to drop DBCHANGELOG tables otherwise they wont appear in 
				generated DB scripts -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>sql-maven-plugin</artifactId>
        <version>1.5</version>

        <dependencies>
					<!-- Apparently, the driver hosted by springsource cannot be downloaded -->
          <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>${mysql.version}</version>
          </dependency>
        </dependencies>

        <configuration>
					<!-- When project packaging is pom, execution of this plugin is skipped AND the skip property is overridden to false. Thank God, we can override the overriding using <forceMojoExecution> -->
          <forceMojoExecution>true</forceMojoExecution>
          <driver>com.mysql.jdbc.Driver</driver>
          <url>${liquibase.mysql.url}</url>
          <username>${liquibase.mysql.username}</username>
          <password>${liquibase.mysql.password}</password>
        </configuration>

        <executions>
          <execution>
            <id>mysql-remove-liquibase-tables</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>execute</goal>
            </goals>
            <configuration>
              <sqlCommand>
                drop table if exists DATABASECHANGELOGLOCK;
                drop table if exists DATABASECHANGELOG;
							</sqlCommand>
            </configuration>
          </execution>
          <execution>
          </execution>
        </executions>
      </plugin>

			<!-- We first run a full install against MySQL -->
      <plugin>
        <groupId>org.liquibase</groupId>
        <artifactId>liquibase-maven-plugin</artifactId>
        <configuration>
          <skip>${mysql.distro.skip}</skip>
        </configuration>
        <executions>
          <execution>
            <id>generate-mysql-full-install-script</id>
            <phase>process-resources</phase>
            <goals>
              <goal>updateSQL</goal>
            </goals>
            <configuration>
              <dropFirst>true</dropFirst>
              <changeLogFile>${master.changelog}</changeLogFile>
              <driver>com.mysql.jdbc.Driver</driver>
              <url>${liquibase.mysql.url}</url>
              <username>${liquibase.mysql.username}</username>
              <password>${liquibase.mysql.password}</password>
              <migrationSqlOutputFile>${database.script.directory}/mysql-full-install-version-${project.version}.sql</migrationSqlOutputFile>
            </configuration>
          </execution>
        </executions>
      </plugin>


			<!-- We need to drop DBCHANGELOG tables AGAIN otherwise they wont appear 
				in generated DB scripts -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>sql-maven-plugin</artifactId>
        <version>1.5</version>

        <dependencies>
					<!-- Apparently, the driver hosted by springsource cannot be downloaded -->
          <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>${mysql.version}</version>
          </dependency>
        </dependencies>

        <configuration>
          <forceMojoExecution>true</forceMojoExecution>
          <driver>com.mysql.jdbc.Driver</driver>
          <url>${liquibase.mysql.url}</url>
          <username>${liquibase.mysql.username}</username>
          <password>${liquibase.mysql.password}</password>
        </configuration>

        <executions>
          <execution>
            <id>mysql-remove-liquibase-tables-again</id>
            <phase>process-classes</phase>
            <goals>
              <goal>execute</goal>
            </goals>
            <configuration>
              <sqlCommand>
                drop table if exists DATABASECHANGELOGLOCK;
                drop table if exists DATABASECHANGELOG;
							</sqlCommand>
            </configuration>
          </execution>
          <execution>
          </execution>
        </executions>
      </plugin>

			<!-- We now run an incremental install against MySQL -->
      <plugin>
        <groupId>org.liquibase</groupId>
        <artifactId>liquibase-maven-plugin</artifactId>
        <configuration>
          <skip>${mysql.distro.skip}</skip>
        </configuration>
        <executions>
          <execution>
            <id>generate-mysql-0.15.0-script</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>updateSQL</goal>
            </goals>
            <configuration>
              <dropFirst>true</dropFirst>
              <changeLogFile>${upgrade.0.15.0.changelog}</changeLogFile>
              <driver>com.mysql.jdbc.Driver</driver>
              <url>${liquibase.mysql.url}</url>
              <username>${liquibase.mysql.username}</username>
              <password>${liquibase.mysql.password}</password>
              <migrationSqlOutputFile>${database.script.directory}/mysql-upgrade-to-0.15.0.sql</migrationSqlOutputFile>
            </configuration>
          </execution>

          <execution>
            <id>generate-mysql-0.17.0-script</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>updateSQL</goal>
            </goals>
            <configuration>
              <dropFirst>false</dropFirst>
              <changeLogFile>${upgrade.0.17.0.changelog}</changeLogFile>
              <driver>com.mysql.jdbc.Driver</driver>
              <url>${liquibase.mysql.url}</url>
              <username>${liquibase.mysql.username}</username>
              <password>${liquibase.mysql.password}</password>
              <migrationSqlOutputFile>${database.script.directory}/mysql-upgrade-to-0.17.0.sql</migrationSqlOutputFile>
            </configuration>
          </execution>

          <execution>
            <id>generate-mysql-0.20.0-script</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>updateSQL</goal>
            </goals>
            <configuration>
              <dropFirst>false</dropFirst>
              <changeLogFile>${upgrade.0.20.0.changelog}</changeLogFile>
              <driver>com.mysql.jdbc.Driver</driver>
              <url>${liquibase.mysql.url}</url>
              <username>${liquibase.mysql.username}</username>
              <password>${liquibase.mysql.password}</password>
              <migrationSqlOutputFile>${database.script.directory}/mysql-upgrade-to-0.20.0.sql</migrationSqlOutputFile>
            </configuration>
          </execution>

          <execution>
            <id>generate-mysql-0.23.0-script</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>updateSQL</goal>
            </goals>
            <configuration>
              <dropFirst>false</dropFirst>
              <changeLogFile>${upgrade.0.23.0.changelog}</changeLogFile>
              <driver>com.mysql.jdbc.Driver</driver>
              <url>${liquibase.mysql.url}</url>
              <username>${liquibase.mysql.username}</username>
              <password>${liquibase.mysql.password}</password>
              <migrationSqlOutputFile>${database.script.directory}/mysql-upgrade-to-0.23.0.sql</migrationSqlOutputFile>
            </configuration>
          </execution>

          <execution>
            <id>generate-mysql-1.1.0-script</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>updateSQL</goal>
            </goals>
            <configuration>
              <dropFirst>false</dropFirst>
              <changeLogFile>${upgrade.1.1.0.changelog}</changeLogFile>
              <driver>com.mysql.jdbc.Driver</driver>
              <url>${liquibase.mysql.url}</url>
              <username>${liquibase.mysql.username}</username>
              <password>${liquibase.mysql.password}</password>
              <migrationSqlOutputFile>${database.script.directory}/mysql-upgrade-to-1.1.0.sql</migrationSqlOutputFile>
            </configuration>
          </execution>

          <execution>
            <id>generate-mysql-1.1.1-script</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>updateSQL</goal>
            </goals>
            <configuration>
              <dropFirst>false</dropFirst>
              <changeLogFile>${upgrade.1.1.1.changelog}</changeLogFile>
              <driver>com.mysql.jdbc.Driver</driver>
              <url>${liquibase.mysql.url}</url>
              <username>${liquibase.mysql.username}</username>
              <password>${liquibase.mysql.password}</password>
              <migrationSqlOutputFile>${database.script.directory}/mysql-upgrade-to-1.1.1.sql</migrationSqlOutputFile>
            </configuration>
          </execution>
          <execution>
            <id>generate-mysql-1.2.0-script</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>updateSQL</goal>
            </goals>
            <configuration>
              <dropFirst>false</dropFirst>
              <changeLogFile>${upgrade.1.2.0.changelog}</changeLogFile>
              <driver>com.mysql.jdbc.Driver</driver>
              <url>${liquibase.mysql.url}</url>
              <username>${liquibase.mysql.username}</username>
              <password>${liquibase.mysql.password}</password>
              <migrationSqlOutputFile>${database.script.directory}/mysql-upgrade-to-${squashTmVersion}.sql</migrationSqlOutputFile>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <dependencies>
		<!-- Felix OSGi runtime -->
    <dependency>
      <groupId>org.apache.felix</groupId>
      <artifactId>${felix.artifactId}</artifactId>
      <version>${felix.version}</version>
    </dependency>

		<!-- OSGi platform components (bundles) -->
    <dependency>
      <groupId>org.apache.felix</groupId>
      <artifactId>org.apache.felix.gogo.runtime</artifactId>
      <version>${felix.gogo.version}</version>
    </dependency>

    <dependency>
      <groupId>org.apache.felix</groupId>
      <artifactId>org.apache.felix.gogo.shell</artifactId>
      <version>${felix.gogo.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.felix</groupId>
      <artifactId>org.apache.felix.gogo.command</artifactId>
      <version>${felix.gogo.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.felix</groupId>
      <artifactId>org.apache.felix.bundlerepository</artifactId>
      <version>1.6.4</version>
    </dependency>

		<!-- ====== SQUASHTEST ====== -->
		<!-- Squashtest core modules -->
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>org.squashtest.csp.core.log4j</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>org.squashtest.csp.core.jetty.start.osgi</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.squashtest.tm</groupId>
      <artifactId>core.bugtracker.api</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.squashtest.tm</groupId>
      <artifactId>core.web</artifactId>
      <version>${project.version}</version>
      <type>war</type>
    </dependency>
    <dependency>
      <groupId>org.squashtest.tm</groupId>
      <artifactId>core.web</artifactId>
      <version>${project.version}</version>
      <type>pom</type>
    </dependency>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>org.squashtest.csp.core.service</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.squashtest.tm</groupId>
      <artifactId>core.api</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>squashtest-csp-launcher</artifactId>
      <version>${project.version}</version>
    </dependency>
		<!-- Squashtest tm modules -->
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>org.squashtest.csp.tm.web</artifactId>
      <version>${project.version}</version>
      <type>war</type>
    </dependency>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>org.squashtest.csp.tm.web</artifactId>
      <version>${project.version}</version>
      <type>pom</type>
    </dependency>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>org.squashtest.csp.tm.service</artifactId>
      <version>${project.version}</version>
    </dependency>
		<!-- ====== /SQUASHTEST ====== -->

		<!-- ====== SQUASHTEST ====== -->
		<!-- Squashtest core modules -->
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>org.squashtest.csp.core.log4j</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>org.squashtest.csp.core.jetty.start.osgi</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>core.bugtracker.api</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>core.bugtracker.mantis</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>plugin.report.std</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>core.web</artifactId>
      <version>${project.version}</version>
      <type>war</type>
    </dependency>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>org.squashtest.csp.core.service</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>squashtest-csp-launcher</artifactId>
      <version>${project.version}</version>
    </dependency>
		<!-- Squashtest tm modules -->
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>org.squashtest.csp.tm.web</artifactId>
      <version>${project.version}</version>
      <type>war</type>
    </dependency>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>org.squashtest.csp.tm.service</artifactId>
      <version>${project.version}</version>
    </dependency>
		<!-- ====== /SQUASHTEST ====== -->

		<!-- ====== CONFIG ADMIN COMPENDIUM SERVICE ====== -->
    <dependency>
      <groupId>org.apache.felix</groupId>
      <artifactId>org.apache.felix.configadmin</artifactId>
    </dependency>
    <dependency>
      <groupId>org.ops4j.pax.confman</groupId>
      <artifactId>pax-confman-propsloader</artifactId>
    </dependency>
		<!-- ====== /CONFIG ADMIN COMPENDIUM SERVICE ====== -->

		<!-- ====== JEE API ====== -->
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>com.springsource.javax.servlet</artifactId>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>javax.el</groupId>
      <artifactId>com.springsource.javax.el</artifactId>
    </dependency>
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>com.springsource.javax.servlet.jsp</artifactId>
    </dependency>
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>com.springsource.javax.servlet.jsp.jstl</artifactId>
    </dependency>
		<!-- ====== /JEE API ====== -->

		<!-- ====== SPRING DM ====== -->
    <dependency>
      <groupId>org.springframework.osgi</groupId>
      <artifactId>spring-osgi-extender</artifactId>
    </dependency>
		<!-- ====== /SPRING DM ====== -->

		<!-- ====== SPRING DM WEB EXTENDER ====== -->
    <dependency>
      <groupId>org.springframework.osgi</groupId>
      <artifactId>spring-osgi-web</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.osgi</groupId>
      <artifactId>spring-osgi-web-extender</artifactId>
    </dependency>
		<!-- Deploys WARs to Jetty -->
    <dependency>
      <groupId>org.springframework.osgi</groupId>
      <artifactId>jetty.web.extender.fragment.osgi</artifactId>
    </dependency>
		<!-- ====== /SPRING DM WEB EXTENDER ====== -->

		<!-- ====== JETTY ====== -->
    <dependency>
      <groupId>org.mortbay.jetty</groupId>
      <artifactId>com.springsource.org.mortbay.jetty.server</artifactId>
    </dependency>
    <dependency>
      <groupId>org.mortbay.jetty</groupId>
      <artifactId>com.springsource.org.mortbay.util</artifactId>
    </dependency>
		<!-- ====== /JETTY ====== -->

		<!-- ====== JSP COMPILER ====== -->
    <dependency>
      <groupId>org.springframework.osgi</groupId>
      <artifactId>jasper.osgi</artifactId>
    </dependency>
<!-- should not be needed in felix
 		<dependency>
			<groupId>org.apache.xmlcommons</groupId>
			<artifactId>com.springsource.org.apache.xmlcommons</artifactId>
		</dependency>
 -->		<!-- ====== /JSP COMPILER ====== -->

		<!-- ====== DATABASE ====== -->
    <dependency>
      <groupId>com.h2database</groupId>
      <artifactId>h2</artifactId>
    </dependency>
    <dependency>
      <groupId>com.mysql.jdbc</groupId>
      <artifactId>com.springsource.com.mysql.jdbc</artifactId>
    </dependency>
		<!-- ====== /DATABASE ====== -->

		<!-- ====== LOGGING ====== -->
<!-- 		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>com.springsource.slf4j.api</artifactId>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>com.springsource.slf4j.log4j</artifactId>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>com.springsource.slf4j.org.apache.commons.logging</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.log4j</groupId>
			<artifactId>com.springsource.org.apache.log4j</artifactId>
		</dependency>
 -->		<!-- ====== /LOGGING ====== -->

		<!-- ====== XML PARSER ====== -->
		<!-- Required by jstl impl -->
<!-- 		<dependency>
			<groupId>org.apache.xmlcommons</groupId>
			<artifactId>com.springsource.org.apache.xmlcommons</artifactId>
			<scope>runtime</scope>
		</dependency>
 -->		<!-- ====== /XML PARSER ====== -->

    <dependency>
      <groupId>org.codehaus.izpack</groupId>
      <artifactId>izpack-standalone-compiler</artifactId>
      <version>${izpack-compiler.version}</version>
      <scope>test</scope>
    </dependency>
  </dependencies>
</project>
