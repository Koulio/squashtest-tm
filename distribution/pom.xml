<?xml version="1.0"?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
	xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<artifactId>squashtest-parent-pom</artifactId>
		<groupId>org.squashtest.csp</groupId>
		<version>1.0.0.RC1-SNAPSHOT</version>
		<relativePath>../parent-pom</relativePath>
	</parent>
	<groupId>org.squashtest.csp</groupId>
	<artifactId>squashtest-csp-distribution</artifactId>
	<version>1.0.0.RC1-SNAPSHOT</version>
	<name>squashtest-tm-distribution</name>
	<description>Squashtest CSP - Distribution assembly module
	</description>
	<packaging>pom</packaging>

	<properties>
		<master.changelog>${project.build.outputDirectory}/distribution.changelog-master.xml</master.changelog>
		<upgrade.0.15.0.changelog>${project.build.outputDirectory}/distribution.changelog-upgrade-to-0.15.0.xml</upgrade.0.15.0.changelog>
		<upgrade.0.17.0.changelog>${project.build.outputDirectory}/distribution.changelog-upgrade-to-0.17.0.xml</upgrade.0.17.0.changelog>
		<upgrade.0.20.0.changelog>${project.build.outputDirectory}/distribution.changelog-upgrade-to-0.20.0.xml</upgrade.0.20.0.changelog>
		<upgrade.0.23.0.changelog>${project.build.outputDirectory}/distribution.changelog-upgrade-to-0.23.0.xml</upgrade.0.23.0.changelog>
		<felix.artifactId>org.apache.felix.main</felix.artifactId>
		<felix.version>3.2.1</felix.version>
		<felix.gogo.version>0.6.1</felix.gogo.version>
		<equinox.artifactId>org.eclipse.osgi</equinox.artifactId>
		<equinox.version>3.6.1.R36x_v20100806</equinox.version>
		<equinox.launcher.artifactId>launcher</equinox.launcher.artifactId>
		<equinox.launcher.version>1.0.0-v20070606</equinox.launcher.version>
		<database.script.directory>${project.build.directory}/database-scripts/</database.script.directory>
		<h2.incremental.url>jdbc:h2:target/incremental-upgrade-database/squash-tm</h2.incremental.url>
		<h2.full.url>jdbc:h2:target/full-install-database/squash-tm</h2.full.url>
		<distro.directory.name>squash-tm</distro.directory.name>
		<distro.archive.name>${distro.directory.name}-${project.version}</distro.archive.name>
		<config.database.driverClassName>org.h2.Driver</config.database.driverClassName>
		<config.database.url>jdbc:h2:../data/squash-tm</config.database.url>
		<config.database.username>sa</config.database.username>
		<config.database.password>sa</config.database.password>
		<izpack-compiler.version>4.3.4</izpack-compiler.version>
		<izpack-plugin.version>1.0-alpha-5</izpack-plugin.version>
		<izpack.resources.outputDirectory>${project.build.directory}/izpack-resources</izpack.resources.outputDirectory>
		<izpack.licence.path>${project.build.directory}/maven-shared-archive-resources/META-INF/COPYING.txt</izpack.licence.path>
		<izpack.distro.directory>${project.build.directory}/${distro.archive.name}/${distro.directory.name}</izpack.distro.directory>
	</properties>

	<build>
		<resources>
			<resource>
				<directory>${project.basedir}/src/main/liquibase</directory>
				<filtering>true</filtering>
			</resource>
		</resources>

		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>2.2.1</version>
				<executions>
					<execution>
						<id>assemble-standalone-distro</id>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
						<configuration>
							<descriptors>
								<descriptor>src/main/assembly/binary-distro.xml</descriptor>
							</descriptors>
							<appendAssemblyId>false</appendAssemblyId>
							<finalName>${distro.archive.name}</finalName>
						</configuration>
					</execution>
				</executions>
			</plugin>

<plugin>
          <groupId>org.codehaus.izpack</groupId>
          <artifactId>izpack-maven-plugin</artifactId>
          <version>${izpack-plugin.version}</version>
          <executions>
            <execution>
              <phase>package</phase>
              <goals>
                <goal>izpack</goal>
              </goals>
              <configuration>
		      <descriptor>${izpack.resources.outputDirectory}/install.xml</descriptor>
		      <fileExtension>exe</fileExtension>
			<kind>installer</kind>
			<installerFile>${project.build.directory}/${distro.directory.name}-${project.version}-installer</installerFile>
              </configuration>
            </execution>
          </executions>
          <dependencies>
            <dependency>
              <groupId>org.codehaus.izpack</groupId>
              <artifactId>izpack-standalone-compiler</artifactId>
	      <version>${izpack-compiler.version}</version>
            </dependency>
          </dependencies>
        </plugin>
			
			<plugin>
				<!-- resources are not processed for pom projects -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<executions>
					<execution>
					<id>resources</id>
					<goals>
						<goal>resources</goal>
					</goals>
				</execution>
					<execution>
					<id>izpack-resources</id>
					<phase>process-resources</phase>
					<goals>
						<goal>copy-resources</goal>
					</goals>
					<configuration>
						<escapeWindowsPaths>false</escapeWindowsPaths>
						<resources>
			<resource>
				<directory>${project.basedir}/src/main/izpack</directory>
				<filtering>true</filtering>
			</resource>
						</resources>
						<outputDirectory>${izpack.resources.outputDirectory}</outputDirectory>
					</configuration>
				</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.liquibase</groupId>
				<artifactId>liquibase-maven-plugin</artifactId>
				<configuration>
					<promptOnNonLocalDatabase>false</promptOnNonLocalDatabase>
				</configuration>
				<executions>
					<execution>
						<id>generate-h2-0.15.0-script</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>updateSQL</goal>
						</goals>
						<configuration>
							<dropFirst>true</dropFirst>
							<changeLogFile>${upgrade.0.15.0.changelog}</changeLogFile>
							<driver>org.h2.Driver</driver>
							<url>${h2.incremental.url}</url>
							<username>sa</username>
							<password>sa</password>
							<migrationSqlOutputFile>${database.script.directory}/h2-upgrade-to-0.15.0.sql</migrationSqlOutputFile>
						</configuration>
					</execution>

					<execution>
						<id>generate-h2-0.17.0-script</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>updateSQL</goal>
						</goals>
						<configuration>
							<dropFirst>false</dropFirst>
							<changeLogFile>${upgrade.0.17.0.changelog}</changeLogFile>
							<driver>org.h2.Driver</driver>
							<url>${h2.incremental.url}</url>
							<username>sa</username>
							<password>sa</password>
							<migrationSqlOutputFile>${database.script.directory}/h2-upgrade-to-0.17.0.sql</migrationSqlOutputFile>
						</configuration>
					</execution>

					<execution>
						<id>generate-h2-0.20.0-script</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>updateSQL</goal>
						</goals>
						<configuration>
							<dropFirst>false</dropFirst>
							<changeLogFile>${upgrade.0.20.0.changelog}</changeLogFile>
							<driver>org.h2.Driver</driver>
							<url>${h2.incremental.url}</url>
							<username>sa</username>
							<password>sa</password>
							<migrationSqlOutputFile>${database.script.directory}/h2-upgrade-to-0.20.0.sql</migrationSqlOutputFile>
						</configuration>
					</execution>
					
					<execution>
						<id>generate-h2-0.23.0-script</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>updateSQL</goal>
						</goals>
						<configuration>
							<dropFirst>false</dropFirst>
							<changeLogFile>${upgrade.0.23.0.changelog}</changeLogFile>
							<driver>org.h2.Driver</driver>
							<url>${h2.incremental.url}</url>
							<username>sa</username>
							<password>sa</password>
							<migrationSqlOutputFile>${database.script.directory}/h2-upgrade-to-0.23.0.sql</migrationSqlOutputFile>
						</configuration>
					</execution>					

					<execution>
						<id>generate-h2-full-install-script</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>updateSQL</goal>
						</goals>
						<configuration>
							<dropFirst>true</dropFirst>
							<changeLogFile>${master.changelog}</changeLogFile>
							<driver>org.h2.Driver</driver>
							<url>${h2.full.url}</url>
							<username>sa</username>
							<password>sa</password>
							<migrationSqlOutputFile>${database.script.directory}/h2-full-install.sql</migrationSqlOutputFile>
						</configuration>
					</execution>

					<execution>
						<id>generate-h2-full-install-database-and-script</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>update</goal>
						</goals>
						<configuration>
							<dropFirst>true</dropFirst>
							<changeLogFile>${master.changelog}</changeLogFile>
							<driver>org.h2.Driver</driver>
							<url>jdbc:h2:target/data/squash-tm</url>
							<username>sa</username>
							<password>sa</password>
							<migrationSqlOutputFile>${database.script.directory}/h2-full-install.sql</migrationSqlOutputFile>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- We need to drop DBCHANGELOG tables otherwise they wont appear in generated DB scripts -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>sql-maven-plugin</artifactId>
				<version>1.4</version>

				<dependencies>
					<!-- Apparently, the driver hosted by springsource cannot be downloaded -->
					<dependency>
						<groupId>mysql</groupId>
						<artifactId>mysql-connector-java</artifactId>
						<version>${mysql.version}</version>
					</dependency>
				</dependencies>

				<configuration>
					<driver>.jdbc.Driver</driver>
					<url>${liquibase.mysql.url}</url>
					<username>${liquibase.mysql.username}</username>
					<password>${liquibase.mysql.password}</password>
				</configuration>

				<executions>
					<execution>
						<id>mysql-remove-liquibase-tables</id>
						<phase>generate-resources</phase>
						<goals>
							<goal>execute</goal>
						</goals>
						<configuration>
							<sqlCommand>
								drop table if exists DATABASECHANGELOGLOCK;
								drop table if exists DATABASECHANGELOG;
							</sqlCommand>
						</configuration>
					</execution>
					<execution>
					</execution>
				</executions>
			</plugin>

			<!-- We first run a full install against MySQL -->
			<plugin>
				<groupId>org.liquibase</groupId>
				<artifactId>liquibase-maven-plugin</artifactId>
				<configuration>
					<skip>${mysql.distro.skip}</skip>
				</configuration>
				<executions>
					<execution>
						<id>generate-mysql-full-install-script</id>
						<phase>process-resources</phase>
						<goals>
							<goal>updateSQL</goal>
						</goals>
						<configuration>
							<dropFirst>true</dropFirst>
							<changeLogFile>${master.changelog}</changeLogFile>
							<driver>com.mysql.jdbc.Driver</driver>
							<url>${liquibase.mysql.url}</url>
							<username>${liquibase.mysql.username}</username>
							<password>${liquibase.mysql.password}</password>
							<migrationSqlOutputFile>${database.script.directory}/mysql-full-install.sql</migrationSqlOutputFile>
						</configuration>
					</execution>
				</executions>
			</plugin>
		

			<!-- We need to drop DBCHANGELOG tables AGAIN otherwise they wont appear in generated DB scripts -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>sql-maven-plugin</artifactId>
				<version>1.4</version>

				<dependencies>
					<!-- Apparently, the driver hosted by springsource cannot be downloaded -->
					<dependency>
						<groupId>mysql</groupId>
						<artifactId>mysql-connector-java</artifactId>
						<version>${mysql.version}</version>
					</dependency>
				</dependencies>

				<configuration>
					<driver>com.mysql.jdbc.Driver</driver>
					<url>${liquibase.mysql.url}</url>
					<username>${liquibase.mysql.username}</username>
					<password>${liquibase.mysql.password}</password>
				</configuration>

				<executions>
					<execution>
						<id>mysql-remove-liquibase-tables-again</id>
						<phase>process-classes</phase>
						<goals>
							<goal>execute</goal>
						</goals>
						<configuration>
							<sqlCommand>
								drop table if exists DATABASECHANGELOGLOCK;
								drop table if exists DATABASECHANGELOG;
							</sqlCommand>
						</configuration>
					</execution>
					<execution>
					</execution>
				</executions>
			</plugin>

			<!-- We now run an incremental install against MySQL -->
			<plugin>
				<groupId>org.liquibase</groupId>
				<artifactId>liquibase-maven-plugin</artifactId>
				<configuration>
					<skip>${mysql.distro.skip}</skip>
				</configuration>
				<executions>
					<execution>
						<id>generate-mysql-0.15.0-script</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>updateSQL</goal>
						</goals>
						<configuration>
							<dropFirst>true</dropFirst>
							<changeLogFile>${upgrade.0.15.0.changelog}</changeLogFile>
							<driver>com.mysql.jdbc.Driver</driver>
							<url>${liquibase.mysql.url}</url>
							<username>${liquibase.mysql.username}</username>
							<password>${liquibase.mysql.password}</password>
							<migrationSqlOutputFile>${database.script.directory}/mysql-upgrade-to-0.15.0.sql</migrationSqlOutputFile>
						</configuration>
					</execution>

					<execution>
						<id>generate-mysql-0.17.0-script</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>updateSQL</goal>
						</goals>
						<configuration>
							<dropFirst>false</dropFirst>
							<changeLogFile>${upgrade.0.17.0.changelog}</changeLogFile>
							<driver>com.mysql.jdbc.Driver</driver>
							<url>${liquibase.mysql.url}</url>
							<username>${liquibase.mysql.username}</username>
							<password>${liquibase.mysql.password}</password>
							<migrationSqlOutputFile>${database.script.directory}/mysql-upgrade-to-0.17.0.sql</migrationSqlOutputFile>
						</configuration>
					</execution>

					<execution>
						<id>generate-mysql-0.20.0-script</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>updateSQL</goal>
						</goals>
						<configuration>
							<dropFirst>false</dropFirst>
							<changeLogFile>${upgrade.0.20.0.changelog}</changeLogFile>
							<driver>com.mysql.jdbc.Driver</driver>
							<url>${liquibase.mysql.url}</url>
							<username>${liquibase.mysql.username}</username>
							<password>${liquibase.mysql.password}</password>
							<migrationSqlOutputFile>${database.script.directory}/mysql-upgrade-to-0.20.0.sql</migrationSqlOutputFile>
						</configuration>
					</execution>
					
					<execution>
						<id>generate-mysql-0.23.0-script</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>updateSQL</goal>
						</goals>
						<configuration>
							<dropFirst>false</dropFirst>
							<changeLogFile>${upgrade.0.23.0.changelog}</changeLogFile>
							<driver>com.mysql.jdbc.Driver</driver>
							<url>${liquibase.mysql.url}</url>
							<username>${liquibase.mysql.username}</username>
							<password>${liquibase.mysql.password}</password>
							<migrationSqlOutputFile>${database.script.directory}/mysql-upgrade-to-0.23.0.sql</migrationSqlOutputFile>
						</configuration>
					</execution>					
				</executions>
			</plugin>
		</plugins>
	</build>

	<dependencies>
		<!-- Felix OSGi runtime -->
		<dependency>
			<groupId>org.apache.felix</groupId>
			<artifactId>${felix.artifactId}</artifactId>
			<version>${felix.version}</version>
		</dependency>

		<!-- OSGi platform components (bundles) -->
		<dependency>
			<groupId>org.apache.felix</groupId>
			<artifactId>org.apache.felix.gogo.runtime</artifactId>
			<version>${felix.gogo.version}</version>
		</dependency>

		<dependency>
			<groupId>org.apache.felix</groupId>
			<artifactId>org.apache.felix.gogo.shell</artifactId>
			<version>${felix.gogo.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.felix</groupId>
			<artifactId>org.apache.felix.gogo.command</artifactId>
			<version>${felix.gogo.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.felix</groupId>
			<artifactId>org.apache.felix.bundlerepository</artifactId>
			<version>1.6.4</version>
		</dependency>

		<dependency>
			<groupId>org.apache.felix</groupId>
			<artifactId>org.apache.felix.configadmin</artifactId>
		</dependency>
		<dependency>
			<groupId>org.ops4j.pax.confman</groupId>
			<artifactId>pax-confman-propsloader</artifactId>
		</dependency>
		<!-- ====== /CONFIG ADMIN COMPENDIUM SERVICE ====== -->

		<!-- ====== SPRING DM ====== -->
		<dependency>
			<groupId>org.springframework.osgi</groupId>
			<artifactId>spring-osgi-extender</artifactId>
		</dependency>
		<!-- ====== /SPRING DM ====== -->

		<!-- ====== SPRING DM WEB EXTENDER ====== -->
		<dependency>
			<groupId>org.springframework.osgi</groupId>
			<artifactId>spring-osgi-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.osgi</groupId>
			<artifactId>spring-osgi-web-extender</artifactId>
		</dependency>
		<!-- Deploys WARs to Jetty -->
		<dependency>
			<groupId>org.springframework.osgi</groupId>
			<artifactId>jetty.web.extender.fragment.osgi</artifactId>
		</dependency>
		<!-- ====== /SPRING DM WEB EXTENDER ====== -->

		<!-- ====== JETTY ====== -->
		<dependency>
			<groupId>org.mortbay.jetty</groupId>
			<artifactId>com.springsource.org.mortbay.jetty.server</artifactId>
		</dependency>
		<dependency>
			<groupId>org.mortbay.jetty</groupId>
			<artifactId>com.springsource.org.mortbay.util</artifactId>
		</dependency>
		<!-- ====== /JETTY ====== -->

		<!-- ====== JSP COMPILER ====== -->
		<dependency>
			<groupId>org.springframework.osgi</groupId>
			<artifactId>jasper.osgi</artifactId>
		</dependency>
		<!-- ====== /JSP COMPILER ====== -->

		<!-- ====== FILE UPLOAD ====== -->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>com.springsource.org.apache.commons.fileupload</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>com.springsource.org.apache.commons.io</artifactId>
		</dependency>
		<!-- ====== /FILE UPLOAD ====== -->

		<!-- ====== DATABASE ====== -->
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
		</dependency>
		<dependency>
			<groupId>com.mysql.jdbc</groupId>
			<artifactId>com.springsource.com.mysql.jdbc</artifactId>
		</dependency>
		<!-- ====== /DATABASE ====== -->

		<!-- ====== SQUASHTEST ====== -->
		<!-- Squashtest core modules -->
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>org.squashtest.csp.core.log4j</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>org.squashtest.csp.core.jetty.start.osgi</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>org.squashtest.csp.core.bugtracker</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>org.squashtest.csp.core.web</artifactId>
			<version>${project.version}</version>
			<type>war</type>
		</dependency>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>org.squashtest.csp.core.service</artifactId>
			<version>${project.version}</version>
		</dependency>
		<!-- Squashtest tm modules -->
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>org.squashtest.csp.tm.web</artifactId>
			<version>${project.version}</version>
			<type>war</type>
		</dependency>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>org.squashtest.csp.tm.service</artifactId>
			<version>${project.version}</version>
		</dependency>
		<!-- ====== /SQUASHTEST ====== -->

		<!-- Below : non pulled transitive deps of war module -->

		<!-- ===== HTML Parsing ===== -->

		<dependency>
			<groupId>net.htmlparser.jericho</groupId>
			<artifactId>org.squashtest.net.htmlparser.jericho</artifactId>
			<version>3.1</version>
		</dependency>

		<!-- ===== /HTML Parsing ===== -->

		<!-- ===== JACKSON ===== -->
		<dependency>
			<groupId>org.codehaus.jackson</groupId>
			<artifactId>com.springsource.org.codehaus.jackson.mapper</artifactId>
			<version>1.4.3</version>
		</dependency>
		<dependency>
			<groupId>org.codehaus.jackson</groupId>
			<artifactId>com.springsource.org.codehaus.jackson</artifactId>
			<version>1.4.3</version>
		</dependency>
		<dependency>
			<groupId>org.joda</groupId>
			<artifactId>com.springsource.org.joda.time</artifactId>

		</dependency>
		<!-- ===== / JACKSON ===== -->

		<!-- ====== JEE API ====== -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>com.springsource.javax.servlet</artifactId>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>com.springsource.javax.servlet.jsp</artifactId>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>com.springsource.javax.servlet.jsp.jstl</artifactId>
		</dependency>
		<dependency>
			<groupId>javax.el</groupId>
			<artifactId>com.springsource.javax.el</artifactId>
		</dependency>
		<!-- ====== /JEE API ====== -->

		<!-- ====== JSE DI API ====== -->
		<dependency>
			<groupId>javax.inject</groupId>
			<artifactId>com.springsource.javax.inject</artifactId>
		</dependency>
		<!-- ====== /JSE DI API ====== -->

		<!-- ====== LOGGING ====== -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>com.springsource.slf4j.api</artifactId>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>com.springsource.slf4j.log4j</artifactId>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>com.springsource.slf4j.org.apache.commons.logging</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.log4j</groupId>
			<artifactId>com.springsource.org.apache.log4j</artifactId>
		</dependency>
		<!-- ====== /LOGGING ====== -->

		<!-- ====== SPRING DI ====== -->
		<!-- Required by Spring MVC -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>org.springframework.context.support</artifactId>
		</dependency>
		<!-- ====== /SPRING DI ====== -->

		<!-- ====== XML PARSER ====== -->
		<!-- Required by jstl impl -->
		<dependency>
			<groupId>org.apache.xmlcommons</groupId>
			<artifactId>com.springsource.org.apache.xmlcommons</artifactId>
			<version>1.3.4</version>
			<scope>runtime</scope>
		</dependency>
		<!-- ====== /XML PARSER ====== -->

		<!-- ====== SPRING MVC ====== -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>org.springframework.web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>org.springframework.web.servlet</artifactId>
		</dependency>
		<!-- ====== /SPRING MVC ====== -->

		<!-- ====== URL REWRITING ====== -->
		<dependency>
			<groupId>org.tuckey</groupId>
			<artifactId>com.springsource.org.tuckey.web.filters.urlrewrite</artifactId>
		</dependency>
		<!-- ====== /URL REWRITING ====== -->

		<!-- ====== SPRING SECURITY ====== -->
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>org.springframework.security.web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>org.springframework.security.config</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>org.springframework.security.taglibs</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>org.springframework.security.core</artifactId>
		</dependency>
		<!-- ====== /SPRING SECURITY ====== -->

		<!-- ====== VALIDATION ====== -->
		<dependency>
			<groupId>javax.validation</groupId>
			<artifactId>com.springsource.javax.validation</artifactId>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>com.springsource.org.hibernate.validator</artifactId>
		</dependency>
		<!-- ====== /VALIDATION ====== -->

		<!-- ===== ASPECTJ ===== -->
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>com.springsource.org.aspectj.runtime</artifactId>
			<version>${aspectj.version}</version>
		</dependency>
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>com.springsource.org.aspectj.weaver</artifactId>
			<version>${aspectj.version}</version>
		</dependency>
		<!-- ===== / ASPECTJ ===== -->

		<!-- ===== JASPER REPORTS ===== -->
		<dependency>
			<groupId>net.sf.jasperreports</groupId>
			<artifactId>org.squashtest.net.sf.jasperreports</artifactId>
		</dependency>
		<!-- ===== /JASPER REPORTS ===== -->
      <dependency>
        <groupId>org.codehaus.izpack</groupId>
        <artifactId>izpack-standalone-compiler</artifactId>
	<version>${izpack-compiler.version}</version>
	<scope>provided</scope>
      </dependency>
	</dependencies>
</project>
