<?xml version="1.0" encoding="UTF-8"?>
<!--

        This file is part of the Squashtest platform.
        Copyright (C) 2010 - 2011 Squashtest TM, Squashtest.org

        See the NOTICE file distributed with this work for additional
        information regarding copyright ownership.

        This is free software: you can redistribute it and/or modify
        it under the terms of the GNU Lesser General Public License as published by
        the Free Software Foundation, either version 3 of the License, or
        (at your option) any later version.

        this software is distributed in the hope that it will be useful,
        but WITHOUT ANY WARRANTY; without even the implied warranty of
        MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
        GNU Lesser General Public License for more details.

        You should have received a copy of the GNU Lesser General Public License
        along with this software.  If not, see <http://www.gnu.org/licenses/>.

-->
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.0.xsd">

	<http  auto-config="true" use-expressions="true" entry-point-ref="authenticationProcessingFilterEntryPoint"   >
		<!-- Login page config -->
		<intercept-url pattern="/login" access="permitAll" />

		<!-- Logout page config; we have to set "home-workspace" instead of "/" for logout url to avoid "/null" url -->
		<logout invalidate-session="true" logout-success-url="/home-workspace" logout-url="/logout"  />
		
		<request-cache ref="htppSessionRequestCache"/>

		<!-- Pages restricted to admins -->

		<intercept-url requires-channel="${authentication.application.securablechannels}" pattern="/projects" access="hasRole('ROLE_ADMIN')" />
		<intercept-url requires-channel="${authentication.application.securablechannels}" pattern="/projects/**" access="hasRole('ROLE_ADMIN')" />
		<intercept-url requires-channel="${authentication.application.securablechannels}" pattern="/admin" access="hasRole('ROLE_ADMIN')" />
		<intercept-url requires-channel="${authentication.application.securablechannels}" pattern="/admin/**" access="hasRole('ROLE_ADMIN')" />
		<intercept-url requires-channel="${authentication.application.securablechannels}" pattern="/administration" access="hasRole('ROLE_ADMIN')" />
		<intercept-url requires-channel="${authentication.application.securablechannels}" pattern="/administration/**" access="hasRole('ROLE_ADMIN')" />
		<intercept-url requires-channel="${authentication.application.securablechannels}" pattern="/configuration" access="hasRole('ROLE_ADMIN')" />
		<intercept-url requires-channel="${authentication.application.securablechannels}" pattern="/configuration/**" access="hasRole('ROLE_ADMIN')" />
		<intercept-url requires-channel="${authentication.application.securablechannels}" pattern="/users" access="hasRole('ROLE_ADMIN')" />
		<intercept-url requires-channel="${authentication.application.securablechannels}" pattern="/users/**" access="hasRole('ROLE_ADMIN')" />
		<intercept-url requires-channel="${authentication.application.securablechannels}" pattern="/user-account" access="isAuthenticated()" />
		<intercept-url requires-channel="${authentication.application.securablechannels}" pattern="/user-account/**" access="isAuthenticated()" />

		 <!-- 
		<intercept-url pattern="/projects" access="hasRole('ROLE_ADMIN')" />
		<intercept-url pattern="/projects/**" access="hasRole('ROLE_ADMIN')" />
		<intercept-url pattern="/admin" access="hasRole('ROLE_ADMIN')" />
		<intercept-url pattern="/admin/**" access="hasRole('ROLE_ADMIN')" />
		<intercept-url pattern="/administration" access="hasRole('ROLE_ADMIN')" />
		<intercept-url pattern="/administration/**" access="hasRole('ROLE_ADMIN')" />
		<intercept-url pattern="/users" access="hasRole('ROLE_ADMIN')" />
		<intercept-url pattern="/users/**" access="hasRole('ROLE_ADMIN')" />
		<intercept-url pattern="/user-account" access="isAuthenticated()" />
		<intercept-url pattern="/user-account/**" access="isAuthenticated()" />
		 -->
			
		<!--  images and stuff dont need authentication -->
		<intercept-url pattern="/images/**" filters="none" />
		<intercept-url pattern="/styles/**" filters="none" />
		<intercept-url pattern="/scripts/**" filters="none"/>
		
		<!-- One must log in to access the application -->
		<intercept-url pattern="/**" access="isAuthenticated()" />
		
		<!-- we must specify this to force redirect to login page when failure happens
		and avoid unstyled login error page generated by spring -->
		
		<form-login authentication-failure-url="/login.jsp?login-error" />
		
		<access-denied-handler ref="accessDeniedHandler" />
		
		<custom-filter ref="htmlSanitizationFilter" position="FIRST"/>
		
	</http>
	
	
	<beans:bean id="exceptionTranslationFilter" class="org.springframework.security.web.access.ExceptionTranslationFilter">
	  <beans:property name="authenticationEntryPoint" ref="authenticationProcessingFilterEntryPoint"/>
	  <beans:property name="accessDeniedHandler" ref="accessDeniedHandler"/>
	</beans:bean>
	
	<beans:bean id="htppSessionRequestCache" class="org.squashtest.csp.core.web.controller.authentication.LoginFormDiscardingHttpSessionRequestCache">
		<beans:property name="justUseSavedRequestOnGet" value="true"/>
		<beans:property name="loginFormUrl" value="/login.jsp" />
	</beans:bean>

	
	<beans:bean id="accessDeniedHandler" class="org.squashtest.csp.core.internal.security.web.authentication.MyAccessDeniedHandler" >
	  <beans:property name="errorPage" value="/squash/accessDenied"/>
	</beans:bean>

	<beans:bean id="authenticationProcessingFilterEntryPoint" class="org.squashtest.csp.core.internal.security.web.authentication.RedirectEntryPoint">
	 	<beans:property name="loginFormUrl" value="/login" />
	 	<beans:property name="forceHttps" value="${authentication.application.forcehttps}" />
	</beans:bean>
	
	<beans:bean id="htmlSanitizationFilter" class="org.squashtest.csp.core.web.internal.filter.HtmlSanitizationFilter"/>
	
	<authentication-manager
		alias="squashtest.core.security.AuthenticationManager">
		<authentication-provider user-service-ref="squashtest.core.security.UserDetailsService">			
			<password-encoder hash="sha" />
		</authentication-provider>

	</authentication-manager>
	
	
	<!--  the userDetailsManagerService comes from OSGI -->
	<beans:bean id="squashtest.core.security.UserDetailsService" 
		class="org.squashtest.csp.core.internal.security.web.authentication.OSGIProxyUserDetailsService">
		<beans:property name="jdbcUserDetailsManager" ref="squashtest.core.security.JdbcUserDetailsManager" />
		<beans:property name="authenticationManager" ref="squashtest.core.security.AuthenticationManager" />
	</beans:bean>

</beans:beans>